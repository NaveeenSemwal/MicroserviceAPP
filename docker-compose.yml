version: '3.4'

services:
  sqldb:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: sql.db.container
    restart: always
    environment:
       ACCEPT_EULA: "Y"
       SA_PASSWORD: "dotvik@987"
    ports:
      - "1433:1433"
    volumes:
      - C:/MicroserviceAPP/data:/var/opt/mssql/data
   
  basketdb:
    image: redis
    container_name: basket.db.container
    restart: always
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  catalog.api:
    image: aspnetdocker/catalogapi:v1
    container_name: catalog.api.container
    restart: on-failure
    build:
      context: .
      dockerfile: Catalog.API/Dockerfile
    depends_on:
      - sqldb
    ports:
      - "8000:80"
  
  ordering.api:
    image: aspnetdocker/orderapi:v1
    container_name: order.api.container
    restart: on-failure
    build:
      context: .
      dockerfile: Ordering.API/Dockerfile
    depends_on:
      - rabbitmq
      - sqldb
    ports:
      - "8002:80"
 
  basket.api:
    image: aspnetdocker/basketapi:v1
    container_name: basket.api.container
    restart: on-failure
    build:
      context: .
      dockerfile: Basket.API/Dockerfile
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:80"
  
  ocelotapi.gateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    container_name: ocelotapi.gateway.container
    restart: on-failure
    build:
      context: .
      dockerfile: OcelotAPI.Gateway/Dockerfile
    depends_on:
      - basket.api
      - catalog.api
      - ordering.api
    ports:
      - "7000:80"
  